GL_FUNCTION(LogicOp, void, (GLenum opcode), (ARG1),,)
GL_FUNCTION(ClearIndex, void, (GLfloat c), (fARG1),,)
GL_FUNCTION(ClearColor, void, (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha), (fARG1, fARG2, fARG3, fARG4),,)
GL_FUNCTION(Clear, void, (GLbitfield mask), (ARG1),,)
GL_FUNCTION(IndexMask, void, (GLuint mask), (ARG1),,)
GL_FUNCTION(ColorMask, void, (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha), (ARG1, ARG2, ARG3, ARG4),,)
GL_FUNCTION(AlphaFunc, void, (GLenum func, GLclampf ref), (ARG1, fARG2),,)
GL_FUNCTION(BlendFunc, void, (GLenum sfactor, GLenum dfactor), (ARG1, ARG2),,)
GL_FUNCTION(CullFace, void, (GLenum mode), (ARG1),,)
GL_FUNCTION(FrontFace, void, (GLenum mode), (ARG1),,)
GL_FUNCTION(PointSize, void, (GLfloat size), (fARG1),,)
GL_FUNCTION(LineWidth, void, (GLfloat width), (fARG1),,)
GL_FUNCTION(LineStipple, void, (GLint factor, GLushort pattern), (ARG1, ARG2),,)
GL_FUNCTION(GetPolygonStipple, void, (GLubyte *mask), (buffer), U8 buffer[128];, marshalBackub(cpu, ARG1, buffer, 128);)
GL_FUNCTION(PolygonMode, void, (GLenum face, GLenum mode), (ARG1, ARG2),,)
GL_FUNCTION(PolygonOffset, void, (GLfloat factor, GLfloat units), (fARG1, fARG2),,)
GL_FUNCTION(PolygonStipple, void, (const GLubyte *mask), (marshalub(cpu, ARG1, 128)),,)
GL_FUNCTION(EdgeFlag, void, (GLboolean flag), (ARG1),,)
GL_FUNCTION(EdgeFlagv, void, (const GLboolean *flag), (marshalbool(cpu, ARG1, 1)),,)
GL_FUNCTION(Scissor, void, (GLint x, GLint y, GLsizei width, GLsizei height), (ARG1, ARG2, ARG3, ARG4),,)
GL_FUNCTION(ClipPlane, void, (GLenum plane, const GLdouble *equation), (ARG1, marshald(cpu, ARG2, 4)),,)
GL_FUNCTION(GetClipPlane, void, (GLenum plane, GLdouble *equation), (ARG1, buffer), GLdouble buffer[4];, marshalBackd(cpu, ARG2, buffer, 4);)
GL_FUNCTION(DrawBuffer, void, (GLenum mode), (ARG1),,)
GL_FUNCTION(ReadBuffer, void, (GLenum mode), (ARG1),,)
GL_FUNCTION(Enable, void, (GLenum cap), (ARG1),,)
GL_FUNCTION(Disable, void, (GLenum cap), (ARG1),,)
GL_FUNCTION(IsEnabled, GLboolean, (GLenum cap), (ARG1),EAX=,)
GL_FUNCTION(EnableClientState, void, (GLenum cap), (ARG1),,)
GL_FUNCTION(DisableClientState, void, (GLenum cap), (ARG1),,)
GL_FUNCTION(PushAttrib, void, (GLbitfield mask), (ARG1),,)
GL_FUNCTION(PopAttrib, void, (), (),,)
GL_FUNCTION(PushClientAttrib, void, (GLbitfield mask), (ARG1),,)
GL_FUNCTION(PopClientAttrib, void, (), (),,)
GL_FUNCTION(RenderMode, GLint, (GLenum mode), (ARG1),EAX=,)
GL_FUNCTION(GetError, GLenum, (), (),EAX=,)
GL_FUNCTION(Hint, void, (GLenum target, GLenum mode), (ARG1, ARG2),,)
GL_FUNCTION(ClearDepth, void, (GLclampd depth), (dARG1),,)
GL_FUNCTION(DepthFunc, void, (GLenum func), (ARG1),,)
GL_FUNCTION(DepthMask, void, (GLboolean flag), (ARG1),,)
GL_FUNCTION(DepthRange, void, (GLclampd near_val, GLclampd far_val), (dARG1, dARG2),,)
GL_FUNCTION(ClearAccum, void, (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha), (fARG1, fARG2, fARG3, fARG4),,)
GL_FUNCTION(Accum, void, (GLenum op, GLfloat value), (ARG1, fARG2),,)
GL_FUNCTION(MatrixMode, void, (GLenum mode), (ARG1),,)
GL_FUNCTION(Ortho, void, (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble near_val, GLdouble far_val), (dARG1, dARG2, dARG3, dARG4, dARG5, dARG6),,)
GL_FUNCTION(Frustum, void, (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble near_val, GLdouble far_val), (dARG1, dARG2, dARG3, dARG4, dARG5, dARG6),,)
GL_FUNCTION(Viewport, void, (GLint x, GLint y, GLsizei width, GLsizei height), (ARG1, ARG2, ARG3, ARG4),,)
GL_FUNCTION(PushMatrix, void, (), (),,)
GL_FUNCTION(PopMatrix, void, (), (),,)
GL_FUNCTION(LoadIdentity, void, (), (),,)
GL_FUNCTION(LoadMatrixd, void, (const GLdouble *m), (marshald(cpu, ARG1, 16)),,)
GL_FUNCTION(LoadMatrixf, void, (const GLfloat *m), (marshalf(cpu, ARG1, 16)),,)
GL_FUNCTION(MultMatrixd, void, (const GLdouble *m), (marshald(cpu, ARG1, 16)),,)
GL_FUNCTION(MultMatrixf, void, (const GLfloat *m), (marshalf(cpu, ARG1, 16)),,)
GL_FUNCTION(Rotated, void, (GLdouble angle, GLdouble x, GLdouble y, GLdouble z), (dARG1, dARG2, dARG3, dARG4),,)
GL_FUNCTION(Rotatef, void, (GLfloat angle, GLfloat x, GLfloat y, GLfloat z), (fARG1, fARG2, fARG3, fARG4),,)
GL_FUNCTION(Scaled, void, (GLdouble x, GLdouble y, GLdouble z), (dARG1, dARG2, dARG3),,)
GL_FUNCTION(Scalef, void, (GLfloat x, GLfloat y, GLfloat z), (fARG1, fARG2, fARG3),,)
GL_FUNCTION(Translated, void, (GLdouble x, GLdouble y, GLdouble z), (dARG1, dARG2, dARG3),,)
GL_FUNCTION(Translatef, void, (GLfloat x, GLfloat y, GLfloat z), (fARG1, fARG2, fARG3),,)
GL_FUNCTION(IsList, GLboolean, (GLuint list), (ARG1),EAX=,)
GL_FUNCTION(DeleteLists, void, (GLuint list, GLsizei range), (ARG1, ARG2),,)
GL_FUNCTION(GenLists, GLuint, (GLsizei range), (ARG1),EAX=,)
GL_FUNCTION(NewList, void, (GLuint list, GLenum mode), (ARG1, ARG2),,)
GL_FUNCTION(EndList, void, (), (),,)
GL_FUNCTION(CallList, void, (GLuint list), (ARG1),,)
GL_FUNCTION(CallLists, void, (GLsizei n, GLenum type, const GLvoid *lists), (ARG1, ARG2, marshalType(cpu, ARG2, ARG1, ARG3)),,)
GL_FUNCTION(ListBase, void, (GLuint base), (ARG1),,)
GL_FUNCTION(Begin, void, (GLenum mode), (ARG1),,)
GL_FUNCTION(End, void, (), (),,)
GL_FUNCTION(Vertex2d, void, (GLdouble x, GLdouble y), (dARG1, dARG2),,)
GL_FUNCTION(Vertex2f, void, (GLfloat x, GLfloat y), (fARG1, fARG2),,)
GL_FUNCTION(Vertex2i, void, (GLint x, GLint y), (ARG1, ARG2),,)
GL_FUNCTION(Vertex2s, void, (GLshort x, GLshort y), (ARG1, ARG2),,)
GL_FUNCTION(Vertex3d, void, (GLdouble x, GLdouble y, GLdouble z), (dARG1, dARG2, dARG3),,)
GL_FUNCTION(Vertex3f, void, (GLfloat x, GLfloat y, GLfloat z), (fARG1, fARG2, fARG3),,)
GL_FUNCTION(Vertex3i, void, (GLint x, GLint y, GLint z), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(Vertex3s, void, (GLshort x, GLshort y, GLshort z), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(Vertex4d, void, (GLdouble x, GLdouble y, GLdouble z, GLdouble w), (dARG1, dARG2, dARG3, dARG4),,)
GL_FUNCTION(Vertex4f, void, (GLfloat x, GLfloat y, GLfloat z, GLfloat w), (fARG1, fARG2, fARG3, fARG4),,)
GL_FUNCTION(Vertex4i, void, (GLint x, GLint y, GLint z, GLint w), (ARG1, ARG2, ARG3, ARG4),,)
GL_FUNCTION(Vertex4s, void, (GLshort x, GLshort y, GLshort z, GLshort w), (ARG1, ARG2, ARG3, ARG4),,)
GL_FUNCTION(Vertex2dv, void, (const GLdouble *v), (marshald(cpu, ARG1, 2)),,)
GL_FUNCTION(Vertex2fv, void, (const GLfloat *v), (marshalf(cpu, ARG1, 2)),,)
GL_FUNCTION(Vertex2iv, void, (const GLint *v), (marshali(cpu, ARG1, 2)),,)
GL_FUNCTION(Vertex2sv, void, (const GLshort *v), (marshals(cpu, ARG1, 2)),,)
GL_FUNCTION(Vertex3dv, void, (const GLdouble *v), (marshald(cpu, ARG1, 3)),,)
GL_FUNCTION(Vertex3fv, void, (const GLfloat *v), (marshalf(cpu, ARG1, 3)),,)
GL_FUNCTION(Vertex3iv, void, (const GLint *v), (marshali(cpu, ARG1, 3)),,)
GL_FUNCTION(Vertex3sv, void, (const GLshort *v), (marshals(cpu, ARG1, 3)),,)
GL_FUNCTION(Vertex4dv, void, (const GLdouble *v), (marshald(cpu, ARG1, 4)),,)
GL_FUNCTION(Vertex4fv, void, (const GLfloat *v), (marshalf(cpu, ARG1, 4)),,)
GL_FUNCTION(Vertex4iv, void, (const GLint *v), (marshali(cpu, ARG1, 4)),,)
GL_FUNCTION(Vertex4sv, void, (const GLshort *v), (marshals(cpu, ARG1, 4)),,)
GL_FUNCTION(Normal3b, void, (GLbyte nx, GLbyte ny, GLbyte nz), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(Normal3d, void, (GLdouble nx, GLdouble ny, GLdouble nz), (dARG1, dARG2, dARG3),,)
GL_FUNCTION(Normal3f, void, (GLfloat nx, GLfloat ny, GLfloat nz), (fARG1, fARG2, fARG3),,)
GL_FUNCTION(Normal3i, void, (GLint nx, GLint ny, GLint nz), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(Normal3s, void, (GLshort nx, GLshort ny, GLshort nz), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(Normal3bv, void, (const GLbyte *v), (marshalb(cpu, ARG1, 3)),,)
GL_FUNCTION(Normal3dv, void, (const GLdouble *v), (marshald(cpu, ARG1, 3)),,)
GL_FUNCTION(Normal3fv, void, (const GLfloat *v), (marshalf(cpu, ARG1, 3)),,)
GL_FUNCTION(Normal3iv, void, (const GLint *v), (marshali(cpu, ARG1, 3)),,)
GL_FUNCTION(Normal3sv, void, (const GLshort *v), (marshals(cpu, ARG1, 3)),,)
GL_FUNCTION(Indexd, void, (GLdouble c), (dARG1),,)
GL_FUNCTION(Indexf, void, (GLfloat c), (fARG1),,)
GL_FUNCTION(Indexi, void, (GLint c), (ARG1),,)
GL_FUNCTION(Indexs, void, (GLshort c), (ARG1),,)
GL_FUNCTION(Indexub, void, (GLubyte c), (ARG1),,)
GL_FUNCTION(Indexdv, void, (const GLdouble *c), (marshald(cpu, ARG1, 1)),,)
GL_FUNCTION(Indexfv, void, (const GLfloat *c), (marshalf(cpu, ARG1, 1)),,)
GL_FUNCTION(Indexiv, void, (const GLint *c), (marshali(cpu, ARG1, 1)),,)
GL_FUNCTION(Indexsv, void, (const GLshort *c), (marshals(cpu, ARG1, 1)),,)
GL_FUNCTION(Indexubv, void, (const GLubyte *c), (marshalub(cpu, ARG1, 1)),,)
GL_FUNCTION(Color3b, void, (GLbyte red, GLbyte green, GLbyte blue), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(Color3d, void, (GLdouble red, GLdouble green, GLdouble blue), (dARG1, dARG2, dARG3),,)
GL_FUNCTION(Color3f, void, (GLfloat red, GLfloat green, GLfloat blue), (fARG1, fARG2, fARG3),,)
GL_FUNCTION(Color3i, void, (GLint red, GLint green, GLint blue), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(Color3s, void, (GLshort red, GLshort green, GLshort blue), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(Color3ub, void, (GLubyte red, GLubyte green, GLubyte blue), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(Color3ui, void, (GLuint red, GLuint green, GLuint blue), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(Color3us, void, (GLushort red, GLushort green, GLushort blue), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(Color4b, void, (GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha), (ARG1, ARG2, ARG3, ARG4),,)
GL_FUNCTION(Color4d, void, (GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha), (dARG1, dARG2, dARG3, dARG4),,)
GL_FUNCTION(Color4f, void, (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha), (fARG1, fARG2, fARG3, fARG4),,)
GL_FUNCTION(Color4i, void, (GLint red, GLint green, GLint blue, GLint alpha), (ARG1, ARG2, ARG3, ARG4),,)
GL_FUNCTION(Color4s, void, (GLshort red, GLshort green, GLshort blue, GLshort alpha), (ARG1, ARG2, ARG3, ARG4),,)
GL_FUNCTION(Color4ub, void, (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha), (ARG1, ARG2, ARG3, ARG4),,)
GL_FUNCTION(Color4ui, void, (GLuint red, GLuint green, GLuint blue, GLuint alpha), (ARG1, ARG2, ARG3, ARG4),,)
GL_FUNCTION(Color4us, void, (GLushort red, GLushort green, GLushort blue, GLushort alpha), (ARG1, ARG2, ARG3, ARG4),,)
GL_FUNCTION(Color3bv, void, (const GLbyte *v), (marshalb(cpu, ARG1, 3)),,)
GL_FUNCTION(Color3dv, void, (const GLdouble *v), (marshald(cpu, ARG1, 3)),,)
GL_FUNCTION(Color3fv, void, (const GLfloat *v), (marshalf(cpu, ARG1, 3)),,)
GL_FUNCTION(Color3iv, void, (const GLint *v), (marshali(cpu, ARG1, 3)),,)
GL_FUNCTION(Color3sv, void, (const GLshort *v), (marshals(cpu, ARG1, 3)),,)
GL_FUNCTION(Color3ubv, void, (const GLubyte *v), (marshalub(cpu, ARG1, 3)),,)
GL_FUNCTION(Color3uiv, void, (const GLuint *v), (marshalui(cpu, ARG1, 3)),,)
GL_FUNCTION(Color3usv, void, (const GLushort *v), (marshalus(cpu, ARG1, 3)),,)
GL_FUNCTION(Color4bv, void, (const GLbyte *v), (marshalb(cpu, ARG1, 4)),,)
GL_FUNCTION(Color4dv, void, (const GLdouble *v), (marshald(cpu, ARG1, 4)),,)
GL_FUNCTION(Color4fv, void, (const GLfloat *v), (marshalf(cpu, ARG1, 4)),,)
GL_FUNCTION(Color4iv, void, (const GLint *v), (marshali(cpu, ARG1, 4)),,)
GL_FUNCTION(Color4sv, void, (const GLshort *v), (marshals(cpu, ARG1, 4)),,)
GL_FUNCTION(Color4ubv, void, (const GLubyte *v), (marshalub(cpu, ARG1, 4)),,)
GL_FUNCTION(Color4uiv, void, (const GLuint *v), (marshalui(cpu, ARG1, 4)),,)
GL_FUNCTION(Color4usv, void, (const GLushort *v), (marshalus(cpu, ARG1, 4)),,)
GL_FUNCTION(TexCoord1d, void, (GLdouble s), (dARG1),,)
GL_FUNCTION(TexCoord1f, void, (GLfloat s), (fARG1),,)
GL_FUNCTION(TexCoord1i, void, (GLint s), (ARG1),,)
GL_FUNCTION(TexCoord1s, void, (GLshort s), (ARG1),,)
GL_FUNCTION(TexCoord2d, void, (GLdouble s, GLdouble t), (dARG1, dARG2),,)
GL_FUNCTION(TexCoord2f, void, (GLfloat s, GLfloat t), (fARG1, fARG2),,)
GL_FUNCTION(TexCoord2i, void, (GLint s, GLint t), (ARG1, ARG2),,)
GL_FUNCTION(TexCoord2s, void, (GLshort s, GLshort t), (ARG1, ARG2),,)
GL_FUNCTION(TexCoord3d, void, (GLdouble s, GLdouble t, GLdouble r), (dARG1, dARG2, dARG3),,)
GL_FUNCTION(TexCoord3f, void, (GLfloat s, GLfloat t, GLfloat r), (fARG1, fARG2, fARG3),,)
GL_FUNCTION(TexCoord3i, void, (GLint s, GLint t, GLint r), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(TexCoord3s, void, (GLshort s, GLshort t, GLshort r), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(TexCoord4d, void, (GLdouble s, GLdouble t, GLdouble r, GLdouble q), (dARG1, dARG2, dARG3, dARG4),,)
GL_FUNCTION(TexCoord4f, void, (GLfloat s, GLfloat t, GLfloat r, GLfloat q), (fARG1, fARG2, fARG3, fARG4),,)
GL_FUNCTION(TexCoord4i, void, (GLint s, GLint t, GLint r, GLint q), (ARG1, ARG2, ARG3, ARG4),,)
GL_FUNCTION(TexCoord4s, void, (GLshort s, GLshort t, GLshort r, GLshort q), (ARG1, ARG2, ARG3, ARG4),,)
GL_FUNCTION(TexCoord1dv, void, (const GLdouble *v), (marshald(cpu, ARG1, 1)),,)
GL_FUNCTION(TexCoord1fv, void, (const GLfloat *v), (marshalf(cpu, ARG1, 1)),,)
GL_FUNCTION(TexCoord1iv, void, (const GLint *v), (marshali(cpu, ARG1, 1)),,)
GL_FUNCTION(TexCoord1sv, void, (const GLshort *v), (marshals(cpu, ARG1, 1)),,)
GL_FUNCTION(TexCoord2dv, void, (const GLdouble *v), (marshald(cpu, ARG1, 2)),,)
GL_FUNCTION(TexCoord2fv, void, (const GLfloat *v), (marshalf(cpu, ARG1, 2)),,)
GL_FUNCTION(TexCoord2iv, void, (const GLint *v), (marshali(cpu, ARG1, 2)),,)
GL_FUNCTION(TexCoord2sv, void, (const GLshort *v), (marshals(cpu, ARG1, 2)),,)
GL_FUNCTION(TexCoord3dv, void, (const GLdouble *v), (marshald(cpu, ARG1, 3)),,)
GL_FUNCTION(TexCoord3fv, void, (const GLfloat *v), (marshalf(cpu, ARG1, 3)),,)
GL_FUNCTION(TexCoord3iv, void, (const GLint *v), (marshali(cpu, ARG1, 3)),,)
GL_FUNCTION(TexCoord3sv, void, (const GLshort *v), (marshals(cpu, ARG1, 3)),,)
GL_FUNCTION(TexCoord4dv, void, (const GLdouble *v), (marshald(cpu, ARG1, 4)),,)
GL_FUNCTION(TexCoord4fv, void, (const GLfloat *v), (marshalf(cpu, ARG1, 4)),,)
GL_FUNCTION(TexCoord4iv, void, (const GLint *v), (marshali(cpu, ARG1, 4)),,)
GL_FUNCTION(TexCoord4sv, void, (const GLshort *v), (marshals(cpu, ARG1, 4)),,)
GL_FUNCTION(RasterPos2d, void, (GLdouble x, GLdouble y), (dARG1, dARG2),,)
GL_FUNCTION(RasterPos2f, void, (GLfloat x, GLfloat y), (fARG1, fARG2),,)
GL_FUNCTION(RasterPos2i, void, (GLint x, GLint y), (ARG1, ARG2),,)
GL_FUNCTION(RasterPos2s, void, (GLshort x, GLshort y), (ARG1, ARG2),,)
GL_FUNCTION(RasterPos3d, void, (GLdouble x, GLdouble y, GLdouble z), (dARG1, dARG2, dARG3),,)
GL_FUNCTION(RasterPos3f, void, (GLfloat x, GLfloat y, GLfloat z), (fARG1, fARG2, fARG3),,)
GL_FUNCTION(RasterPos3i, void, (GLint x, GLint y, GLint z), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(RasterPos3s, void, (GLshort x, GLshort y, GLshort z), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(RasterPos4d, void, (GLdouble x, GLdouble y, GLdouble z, GLdouble w), (dARG1, dARG2, dARG3, dARG4),,)
GL_FUNCTION(RasterPos4f, void, (GLfloat x, GLfloat y, GLfloat z, GLfloat w), (fARG1, fARG2, fARG3, fARG4),,)
GL_FUNCTION(RasterPos4i, void, (GLint x, GLint y, GLint z, GLint w), (ARG1, ARG2, ARG3, ARG4),,)
GL_FUNCTION(RasterPos4s, void, (GLshort x, GLshort y, GLshort z, GLshort w), (ARG1, ARG2, ARG3, ARG4),,)
GL_FUNCTION(RasterPos2dv, void, (const GLdouble *v), (marshald(cpu, ARG1, 2)),,)
GL_FUNCTION(RasterPos2fv, void, (const GLfloat *v), (marshalf(cpu, ARG1, 2)),,)
GL_FUNCTION(RasterPos2iv, void, (const GLint *v), (marshali(cpu, ARG1, 2)),,)
GL_FUNCTION(RasterPos2sv, void, (const GLshort *v), (marshals(cpu, ARG1, 2)),,)
GL_FUNCTION(RasterPos3dv, void, (const GLdouble *v), (marshald(cpu, ARG1, 3)),,)
GL_FUNCTION(RasterPos3fv, void, (const GLfloat *v), (marshalf(cpu, ARG1, 3)),,)
GL_FUNCTION(RasterPos3iv, void, (const GLint *v), (marshali(cpu, ARG1, 3)),,)
GL_FUNCTION(RasterPos3sv, void, (const GLshort *v), (marshals(cpu, ARG1, 3)),,)
GL_FUNCTION(RasterPos4dv, void, (const GLdouble *v), (marshald(cpu, ARG1, 4)),,)
GL_FUNCTION(RasterPos4fv, void, (const GLfloat *v), (marshalf(cpu, ARG1, 4)),,)
GL_FUNCTION(RasterPos4iv, void, (const GLint *v), (marshali(cpu, ARG1, 4)),,)
GL_FUNCTION(RasterPos4sv, void, (const GLshort *v), (marshals(cpu, ARG1, 4)),,)
GL_FUNCTION(Rectd, void, (GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2), (dARG1, dARG2, dARG3, dARG4),,)
GL_FUNCTION(Rectf, void, (GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2), (fARG1, fARG2, fARG3, fARG4),,)
GL_FUNCTION(Recti, void, (GLint x1, GLint y1, GLint x2, GLint y2), (ARG1, ARG2, ARG3, ARG4),,)
GL_FUNCTION(Rects, void, (GLshort x1, GLshort y1, GLshort x2, GLshort y2), (ARG1, ARG2, ARG3, ARG4),,)
GL_FUNCTION(Rectdv, void, (const GLdouble *v1, const GLdouble *v2), (marshald(cpu, ARG1, 2), marshal2d(cpu, ARG3, 2)),,)
GL_FUNCTION(Rectfv, void, (const GLfloat *v1, const GLfloat *v2), (marshalf(cpu, ARG1, 2), marshal2f(cpu, ARG2, 2)),,)
GL_FUNCTION(Rectiv, void, (const GLint *v1, const GLint *v2), (marshali(cpu, ARG1, 2), marshal2i(cpu, ARG2, 2)),,)
GL_FUNCTION(Rectsv, void, (const GLshort *v1, const GLshort *v2), (marshals(cpu, ARG1, 2), marshal2s(cpu, ARG2, 2)),,)
GL_FUNCTION(ShadeModel, void, (GLenum mode), (ARG1),,)
GL_FUNCTION(Lightf, void, (GLenum light, GLenum pname, GLfloat param), (ARG1, ARG2, fARG3),,)
GL_FUNCTION(Lighti, void, (GLenum light, GLenum pname, GLint param), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(Lightfv, void, (GLenum light, GLenum pname, const GLfloat *params), (ARG1, ARG2, marshalf(cpu, ARG3, glcommon_glLightv_size(ARG2))),,)
GL_FUNCTION(Lightiv, void, (GLenum light, GLenum pname, const GLint *params), (ARG1, ARG2, marshali(cpu, ARG3, glcommon_glLightv_size(ARG2))),,)
GL_FUNCTION(LightModelf, void, (GLenum pname, GLfloat param), (ARG1, fARG2),,)
GL_FUNCTION(LightModeli, void, (GLenum pname, GLint param), (ARG1, ARG2),,)
GL_FUNCTION(LightModelfv, void, (GLenum pname, const GLfloat *params), (ARG1, marshalf(cpu, ARG2, glcommon_glLightModelv_size(ARG1))),,)
GL_FUNCTION(LightModeliv, void, (GLenum pname, const GLint *params), (ARG1, marshali(cpu, ARG2, glcommon_glLightModelv_size(ARG1))),,)
GL_FUNCTION(Materialf, void, (GLenum face, GLenum pname, GLfloat param), (ARG1, ARG2, fARG3),,)
GL_FUNCTION(Materiali, void, (GLenum face, GLenum pname, GLint param), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(Materialfv, void, (GLenum face, GLenum pname, const GLfloat *params), (ARG1, ARG2, marshalf(cpu, ARG3, glcommon_glMaterialv_size(ARG2))),,)
GL_FUNCTION(Materialiv, void, (GLenum face, GLenum pname, const GLint *params), (ARG1, ARG2, marshali(cpu, ARG3, glcommon_glMaterialv_size(ARG2))),,)
GL_FUNCTION(ColorMaterial, void, (GLenum face, GLenum mode), (ARG1, ARG2),,)
GL_FUNCTION(PixelZoom, void, (GLfloat xfactor, GLfloat yfactor), (fARG1, fARG2),,)
GL_FUNCTION(PixelStoref, void, (GLenum pname, GLfloat param), (ARG1, fARG2),,)
GL_FUNCTION(PixelStorei, void, (GLenum pname, GLint param), (ARG1, ARG2),,)
GL_FUNCTION(PixelTransferf, void, (GLenum pname, GLfloat param), (ARG1, fARG2),,)
GL_FUNCTION(PixelTransferi, void, (GLenum pname, GLint param), (ARG1, ARG2),,)
GL_FUNCTION(PixelMapfv, void, (GLenum map, GLint mapsize, const GLfloat *values), (ARG1, ARG2, marshalf(cpu, ARG3, ARG2)),,)
GL_FUNCTION(PixelMapuiv, void, (GLenum map, GLint mapsize, const GLuint *values), (ARG1, ARG2, marshalui(cpu, ARG3, ARG2)),,)
GL_FUNCTION(PixelMapusv, void, (GLenum map, GLint mapsize, const GLushort *values), (ARG1, ARG2, marshalus(cpu, ARG3, ARG2)),,)
GL_FUNCTION(Bitmap, void, (GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap), (ARG1, ARG2, fARG3, fARG4, fARG5, fARG6, marshalPixels(cpu, 0, ARG1, ARG2, 1, GL_COLOR_INDEX, GL_BITMAP, ARG7)),,)
GL_FUNCTION(DrawPixels, void, (GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels), (ARG1, ARG2, ARG3, ARG4, marshalPixels(cpu, 0, ARG1, ARG2, 1, ARG3, ARG4, ARG5)),,)
GL_FUNCTION(CopyPixels, void, (GLint x, GLint y, GLsizei width, GLsizei height, GLenum type), (ARG1, ARG2, ARG3, ARG4, ARG5),,)
GL_FUNCTION(StencilFunc, void, (GLenum func, GLint ref, GLuint mask), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(StencilMask, void, (GLuint mask), (ARG1),,)
GL_FUNCTION(StencilOp, void, (GLenum fail, GLenum zfail, GLenum zpass), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(ClearStencil, void, (GLint s), (ARG1),,)
GL_FUNCTION(TexGend, void, (GLenum coord, GLenum pname, GLdouble param), (ARG1, ARG2, dARG3),,)
GL_FUNCTION(TexGenf, void, (GLenum coord, GLenum pname, GLfloat param), (ARG1, ARG2, fARG1),,)
GL_FUNCTION(TexGeni, void, (GLenum coord, GLenum pname, GLint param), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(TexGendv, void, (GLenum coord, GLenum pname, const GLdouble *params), (ARG1, ARG2, marshald(cpu, ARG3, 1)),,)
GL_FUNCTION(TexGenfv, void, (GLenum coord, GLenum pname, const GLfloat *params), (ARG1, ARG2, marshalf(cpu, ARG3, 1)),,)
GL_FUNCTION(TexGeniv, void, (GLenum coord, GLenum pname, const GLint *params), (ARG1, ARG2, marshali(cpu, ARG3, 1)),,)
GL_FUNCTION(TexEnvf, void, (GLenum target, GLenum pname, GLfloat param), (ARG1, ARG2, fARG3),,)
GL_FUNCTION(TexEnvi, void, (GLenum target, GLenum pname, GLint param), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(TexEnvfv, void, (GLenum target, GLenum pname, const GLfloat *params), (ARG1, ARG2, marshalf(cpu, ARG3, 1)),,)
GL_FUNCTION(TexEnviv, void, (GLenum target, GLenum pname, const GLint *params), (ARG1, ARG2, marshali(cpu, ARG3, 1)),,)
GL_FUNCTION(TexParameterf, void, (GLenum target, GLenum pname, GLfloat param), (ARG1, ARG2, fARG3),,)
GL_FUNCTION(TexParameteri, void, (GLenum target, GLenum pname, GLint param), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(TexParameterfv, void, (GLenum target, GLenum pname, const GLfloat *params), (ARG1, ARG2, marshalf(cpu, ARG3, 1)),,)
GL_FUNCTION(TexParameteriv, void, (GLenum target, GLenum pname, const GLint *params), (ARG1, ARG2, marshali(cpu, ARG3, 1)),,)
GL_FUNCTION(TexImage1D, void, (GLenum target, GLint level, GLint internalFormat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels), (ARG1, ARG2, ARG3, ARG4, ARG5, ARG6, ARG7, marshalPixels(cpu, ARG1 == GL_TEXTURE_3D, ARG4, 1, 1, ARG6, ARG7, ARG8)),,)
GL_FUNCTION(TexImage2D, void, (GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels), (ARG1, ARG2, ARG3, ARG4, ARG5, ARG6, ARG7, ARG8, marshalPixels(cpu, ARG1 == GL_TEXTURE_3D, ARG4, ARG5, 1, ARG7, ARG8, ARG9)),,)
GL_FUNCTION(Map1d, void, (GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points), (ARG1, dARG2, dARG3, ARG4, ARG5, marshald(cpu, ARG6, getMap1Count(ARG1)*ARG5)),,)
GL_FUNCTION(Map1f, void, (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points), (ARG1, fARG2, fARG3, ARG4, ARG5, marshalf(cpu, ARG6, getMap1Count(ARG1)*ARG5)),,)
GL_FUNCTION(Map2d, void, (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points), (ARG1, dARG2, dARG3, ARG4, ARG5, dARG6, dARG7, ARG8, ARG9, marshald(cpu, ARG10, getMap2Count(ARG1)*ARG5*ARG9)),,)
GL_FUNCTION(Map2f, void, (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points), (ARG1, fARG2, fARG3, ARG4, ARG5, fARG6, fARG7, ARG8, ARG9, marshalf(cpu, ARG10, getMap2Count(ARG1)*ARG5*ARG9)),,)
GL_FUNCTION(EvalCoord1d, void, (GLdouble u), (dARG1),,)
GL_FUNCTION(EvalCoord1f, void, (GLfloat u), (fARG1),,)
GL_FUNCTION(EvalCoord1dv, void, (const GLdouble *u), (marshald(cpu, ARG1, 1)),,)
GL_FUNCTION(EvalCoord1fv, void, (const GLfloat *u), (marshalf(cpu, ARG1, 1)),,)
GL_FUNCTION(EvalCoord2d, void, (GLdouble u, GLdouble v), (dARG1, dARG2),,)
GL_FUNCTION(EvalCoord2f, void, (GLfloat u, GLfloat v), (fARG1, fARG2),,)
GL_FUNCTION(EvalCoord2dv, void, (const GLdouble *u), (marshald(cpu, ARG1, 2)),,)
GL_FUNCTION(EvalCoord2fv, void, (const GLfloat *u), (marshalf(cpu, ARG1, 2)),,)
GL_FUNCTION(MapGrid1d, void, (GLint un, GLdouble u1, GLdouble u2), (ARG1, dARG2, dARG3),,)
GL_FUNCTION(MapGrid1f, void, (GLint un, GLfloat u1, GLfloat u2), (ARG1, fARG2, fARG3),,)
GL_FUNCTION(MapGrid2d, void, (GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2), (ARG1, dARG2, dARG3, ARG4, dARG5, dARG6),,)
GL_FUNCTION(MapGrid2f, void, (GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2), (ARG1, fARG2, fARG3, ARG4, fARG5, fARG6),,)
GL_FUNCTION(EvalPoint1, void, (GLint i), (ARG1),,)
GL_FUNCTION(EvalPoint2, void, (GLint i, GLint j), (ARG1, ARG2),,)
GL_FUNCTION(EvalMesh1, void, (GLenum mode, GLint i1, GLint i2), (ARG1, ARG2, ARG3),,)
GL_FUNCTION(EvalMesh2, void, (GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2), (ARG1, ARG2, ARG3, ARG4, ARG5),,)
GL_FUNCTION(Fogf, void, (GLenum pname, GLfloat param), (ARG1, fARG2),,)
GL_FUNCTION(Fogi, void, (GLenum pname, GLint param), (ARG1, ARG2),,)
GL_FUNCTION(Fogfv, void, (GLenum pname, const GLfloat *params), (ARG1, marshalf(cpu, ARG2, (ARG1==GL_FOG_COLOR)?4:1)),,)
GL_FUNCTION(Fogiv, void, (GLenum pname, const GLint *params), (ARG1, marshali(cpu, ARG2, (ARG1==GL_FOG_COLOR)?4:1)),,)
GL_FUNCTION(PassThrough, void, (GLfloat token), (fARG1),,)
GL_FUNCTION(InitNames, void, (void), (),,)
GL_FUNCTION(LoadName, void, (GLuint name), (ARG1),,)
GL_FUNCTION(PushName, void, (GLuint name), (ARG1),,)
GL_FUNCTION(PopName, void, (void), (),,)
GL_FUNCTION(DeleteTextures, void, (GLsizei n, const GLuint *textures), (ARG1, marshalui(cpu, ARG2, ARG1)),,)
GL_FUNCTION(BindTexture, void, (GLenum target, GLuint texture), (ARG1, ARG2),,)
GL_FUNCTION(PrioritizeTextures, void, (GLsizei n, const GLuint *textures, const GLclampf *priorities), (ARG1, marshalui(cpu, ARG2, ARG1), marshal2f(cpu, ARG3, ARG1)),,)
GL_FUNCTION(IsTexture, GLboolean, (GLuint texture), (ARG1),EAX=,)
GL_FUNCTION(TexSubImage1D, void, (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels), (ARG1, ARG2, ARG3, ARG4, ARG5, ARG6, marshalPixels(cpu, ARG1 == GL_TEXTURE_3D, ARG4, 1, 1, ARG5, ARG6, ARG7)),,)
GL_FUNCTION(TexSubImage2D, void, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels), (ARG1, ARG2, ARG3, ARG4, ARG5, ARG6, ARG7, ARG8, marshalPixels(cpu, ARG1 == GL_TEXTURE_3D, ARG5, ARG6, 1, ARG7, ARG8, ARG9)),,)
GL_FUNCTION(CopyTexImage1D, void, (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border), (ARG1, ARG2, ARG3, ARG4, ARG5, ARG6, ARG7),,)
GL_FUNCTION(CopyTexImage2D, void, (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border), (ARG1, ARG2, ARG3, ARG4, ARG5, ARG6, ARG7, ARG8),,)
GL_FUNCTION(CopyTexSubImage1D, void, (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width), (ARG1, ARG2, ARG3, ARG4, ARG5, ARG6),,)
GL_FUNCTION(CopyTexSubImage2D, void, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height), (ARG1, ARG2, ARG3, ARG4, ARG5, ARG6, ARG7, ARG8),,)
GL_FUNCTION(ArrayElement, void, (GLint i), (ARG1), updateVertexPointers(cpu, ARG1);,)
GL_FUNCTION(DrawArrays, void, (GLenum mode, GLint first, GLsizei count), (ARG1, ARG2, ARG3), updateVertexPointers(cpu, ARG3);,)
GL_FUNCTION(DrawElements, void, (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices), (ARG1, ARG2, ARG3, marshalType(cpu, ARG3, ARG2, ARG4)), updateVertexPointers(cpu, ARG2);,)
GL_FUNCTION(VertexPointer, void, (GLint size, GLenum type, GLsizei stride, const GLvoid *ptr), (ARG1, ARG2, ARG3, marshalVetextPointer(cpu, ARG1, ARG2, ARG3, ARG4)),,)
GL_FUNCTION(NormalPointer, void, (GLenum type, GLsizei stride, const GLvoid *ptr), (ARG1, ARG2, marshalNormalPointer(cpu, ARG1, ARG2, ARG3)),,)
GL_FUNCTION(ColorPointer, void, (GLint size, GLenum type, GLsizei stride, const GLvoid *ptr), (ARG1, ARG2, ARG3, marshalColorPointer(cpu, ARG1, ARG2, ARG3, ARG4)),,)
GL_FUNCTION(IndexPointer, void, (GLenum type, GLsizei stride, const GLvoid *ptr), (ARG1, ARG2, marshalIndexPointer(cpu, ARG1, ARG2, ARG3)),,)
GL_FUNCTION(TexCoordPointer, void, (GLint size, GLenum type, GLsizei stride, const GLvoid *ptr), (ARG1, ARG2, ARG3, marshalTexCoordPointer(cpu, ARG1, ARG2, ARG3, ARG4)),,)
GL_FUNCTION(EdgeFlagPointer, void, (GLsizei stride, const GLvoid *ptr), (ARG1, marshalEdgeFlagPointer(cpu, ARG1, ARG2)),,)
GL_FUNCTION_CUSTOM(GetString, void, (GLenum name))
GL_FUNCTION_CUSTOM(GetTexImage, void, (GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels))
GL_FUNCTION_CUSTOM(GetMapdv, void, (GLenum target, GLenum query, GLdouble *v))
GL_FUNCTION_CUSTOM(GetMapfv, void, (GLenum target, GLenum query, GLfloat *v))
GL_FUNCTION_CUSTOM(GetMapiv, void, (GLenum target, GLenum query, GLint *v))
GL_FUNCTION_CUSTOM(GetPointerv, void, (GLenum pname, GLvoid **params))
GL_FUNCTION_CUSTOM(ReadPixels, void, (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels))
GL_FUNCTION_CUSTOM(InterleavedArrays, void, (GLenum format, GLsizei stride, const GLvoid *pointer))

GL_FUNCTION(GetTexGendv, void, (GLenum coord, GLenum pname, GLdouble *params), (ARG1, ARG2, buffer), GLdouble buffer[1];, marshalBackd(cpu, ARG3, buffer, 1);)
GL_FUNCTION(GetTexGenfv, void, (GLenum coord, GLenum pname, GLfloat *params), (ARG1, ARG2, buffer), GLfloat buffer[1];, marshalBackf(cpu, ARG3, buffer, 1);)
GL_FUNCTION(GetTexGeniv, void, (GLenum coord, GLenum pname, GLint *params), (ARG1, ARG2, buffer), GLint buffer[1];, marshalBacki(cpu, ARG3, buffer, 1);)
GL_FUNCTION(GetTexEnvfv, void, (GLenum target, GLenum pname, GLfloat *params), (ARG1, ARG2, buffer), GLfloat buffer[1];, marshalBackf(cpu, ARG3, buffer, 1);)
GL_FUNCTION(GetTexEnviv, void, (GLenum target, GLenum pname, GLint *params), (ARG1, ARG2, buffer), GLint buffer[1];, marshalBacki(cpu, ARG3, buffer, 1);)
GL_FUNCTION(GetTexParameterfv, void, (GLenum target, GLenum pname, GLfloat *params), (ARG1, ARG2, buffer), GLfloat buffer[1];, marshalBackf(cpu, ARG3, buffer, 1);)
GL_FUNCTION(GetTexParameteriv, void, (GLenum target, GLenum pname, GLint *params), (ARG1, ARG2, buffer), GLint buffer[1];, marshalBacki(cpu, ARG3, buffer, 1);)
GL_FUNCTION(GetTexLevelParameterfv, void, (GLenum target, GLint level, GLenum pname, GLfloat *params), (ARG1, ARG2, ARG3, buffer), GLfloat buffer[1];, marshalBackf(cpu, ARG4, buffer, 1);)
GL_FUNCTION(GetTexLevelParameteriv, void, (GLenum target, GLint level, GLenum pname, GLint *params), (ARG1, ARG2, ARG3, buffer), GLint buffer[1];, marshalBacki(cpu, ARG4, buffer, 1);)

GL_FUNCTION(AreTexturesResident, void, (GLsizei n, const GLuint *textures, GLboolean *residences), (ARG1, marshalui(cpu, ARG2, ARG1), buffer), GLboolean* buffer = marshal2ub(cpu, ARG3, ARG1);, marshalBackub(cpu, ARG3, buffer, ARG1))
GL_FUNCTION(FeedbackBuffer, void, (GLsizei size, GLenum type, GLfloat *buffer), (ARG1, ARG2, buffer), GLfloat* buffer = marshalf(cpu, ARG3, ARG1);, marshalBackf(cpu, ARG3, buffer, ARG1);)
GL_FUNCTION(SelectBuffer, void, (GLsizei size, GLuint *buffer), (ARG1, buffer), GLuint* buffer = marshalui(cpu, ARG2, ARG1);, marshalBackui(cpu, ARG2, buffer, ARG1);)
GL_FUNCTION(GenTextures, void, (GLsizei n, GLuint *textures), (ARG1, buffer), GLuint* buffer = marshalui(cpu, ARG2, ARG1);, marshalBackui(cpu, ARG2, buffer, ARG1);)

GL_FUNCTION(GetBooleanv, void, (GLenum pname, GLboolean *params), (ARG1, buffer), GLboolean* buffer = marshalbool(cpu, ARG2, getSize(ARG1));, marshalBackbool(cpu, ARG2, buffer, getSize(ARG1));)
GL_FUNCTION(GetDoublev, void, (GLenum pname, GLdouble *params), (ARG1, buffer), GLdouble* buffer = marshald(cpu, ARG2, getSize(ARG1));, marshalBackd(cpu, ARG2, buffer, getSize(ARG1));)
GL_FUNCTION(GetFloatv, void, (GLenum pname, GLfloat *params), (ARG1, buffer), GLfloat* buffer = marshalf(cpu, ARG2, getSize(ARG1));, marshalBackf(cpu, ARG2, buffer, getSize(ARG1));)
GL_FUNCTION(GetIntegerv, void, (GLenum pname, GLint *params), (ARG1, buffer), GLint* buffer = marshali(cpu, ARG2, getSize(ARG1));, marshalBacki(cpu, ARG2, buffer, getSize(ARG1));)
GL_FUNCTION(GetLightfv, void, (GLenum light, GLenum pname, GLfloat *params), (ARG1, ARG2, buffer), GLfloat* buffer = marshalf(cpu, ARG3, glcommon_glLightv_size(ARG2));, marshalBackf(cpu, ARG3, buffer, glcommon_glLightv_size(ARG2));)
GL_FUNCTION(GetLightiv, void, (GLenum light, GLenum pname, GLint *params), (ARG1, ARG2, buffer), GLint* buffer = marshali(cpu, ARG3, glcommon_glLightv_size(ARG2));, marshalBacki(cpu, ARG3, buffer, glcommon_glLightv_size(ARG2));)
GL_FUNCTION(GetMaterialfv, void, (GLenum face, GLenum pname, GLfloat *params), (ARG1, ARG2, buffer), GLfloat* buffer = marshalf(cpu, ARG3, glcommon_glMaterialv_size(ARG2));, marshalBackf(cpu, ARG3, buffer, glcommon_glMaterialv_size(ARG2));)
GL_FUNCTION(GetMaterialiv, void, (GLenum face, GLenum pname, GLint *params), (ARG1, ARG2, buffer), GLint* buffer = marshali(cpu, ARG3, glcommon_glMaterialv_size(ARG2));, marshalBacki(cpu, ARG3, buffer, glcommon_glMaterialv_size(ARG2));)
GL_FUNCTION(GetPixelMapfv, void, (GLenum map, GLfloat *values), (ARG1, buffer), GLfloat* buffer = marshalf(cpu, ARG2, glcommon_glGetPixelMap_size(ARG1));, marshalBackf(cpu, ARG2, buffer, glcommon_glGetPixelMap_size(ARG1));)
GL_FUNCTION(GetPixelMapuiv, void, (GLenum map, GLuint *values), (ARG1, buffer), GLint* buffer = marshali(cpu, ARG2, glcommon_glGetPixelMap_size(ARG1));, marshalBacki(cpu, ARG2, buffer, glcommon_glGetPixelMap_size(ARG1));)
GL_FUNCTION(GetPixelMapusv, void, (GLenum map, GLushort *values), (ARG1, buffer), GLushort* buffer = marshalus(cpu, ARG2, glcommon_glGetPixelMap_size(ARG1));, marshalBackus(cpu, ARG2, buffer, glcommon_glGetPixelMap_size(ARG1));)

GL_EXT_FUNCTION(SamplePass, void, (GLenum pass), (ARG1),,)

#include "glfunctions_ext.h"